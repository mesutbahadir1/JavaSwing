/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.stok_takip;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * @file stok_takip.java
 * @description Belirli bir şirketin stok durumunu kontrol eden program.
 * @assignment Bahar Dönemi 1.Proje
 * @date 17/05/2022
 * @author Muhammed Mesut Bahadır - muhammed.bahadir@stu.fsm.edu.tr
 */
public class UrunGuncelle extends javax.swing.JFrame {

    private static UrunGuncelle obj = null;
    static String con = "jdbc:derby://localhost:1527/StokTakip";
    Connection connect = null;
    Statement state = null;
    ResultSet result = null;
    DefaultTableModel model;

    public UrunGuncelle() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Ürün Güncelleme Ekranı");
        model = (DefaultTableModel) jTable1.getModel();
    }

    //Connection yapısını birden fazla yerde kullanacağım için bunu bir metoda dönüştürmek istedim.
    //Bu metod sayesinde kodun ileriki safhalarında yazacağım kod fazlalıklarından kurtulmuş oldum.
    //Bu metod sayesinde database ile bağlantı sağlayabiliyorum.
    public Connection baglanti() {
        try {
            connect = DriverManager.getConnection(con);
        } catch (SQLException ex) {
            Logger.getLogger(UrunGuncelle.class.getName()).log(Level.SEVERE, null, ex);
        }

        return connect;
    }

    //Ürünler isimli bir class açıp, veritabanına eklemek istediğim ürüne ait bilgileri burada da oluşturup
    //birden fazla kısımda kullanma ihtimalime karşın kod fazlalığından kaçınmak amaçlı bu metodu yazdım.
    //Bu metodu databaseden aldığım verileri Ürünler class'ı aracılığıyla tablo oluşturmak için kullandım.
    public ArrayList<Urunler> urunler(String query) {
        ArrayList<Urunler> urunlerList = new ArrayList<>();
        try {
            connect = baglanti();
            state = connect.createStatement();
            result = state.executeQuery(query);
            Urunler urun;
            while (result.next()) {
                urun = new Urunler(result.getString("urunId"), result.getString("urunAd"), result.getString("urunGrubu"), result.getString("urunAdedi"), result.getString("urunTarih"),result.getString("urunFiyat"));
                urunlerList.add(urun);
            }
            connect.close();
            state.close();
        } catch (SQLException ex) {
            Logger.getLogger(UrunEkle.class.getName()).log(Level.SEVERE, null, ex);
        }

        return urunlerList;
    }

    //Birden fazla tablo oluşturma ihtimalime karşın bu metodu yazdım. Üst taraftaki metoddan aldığım 
    //aldığım bilgileri tabloya aktarmamı sağlayan metoddur.
    public void showTable(String q) {
        ArrayList<Urunler> list = urunler(q);

        Object[] row = new Object[6];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getUrunId();
            row[1] = list.get(i).getUrunAd();
            row[2] = list.get(i).getUrunGrubu();
            row[3] = list.get(i).getUrunAdedi();
            row[5] = list.get(i).getUrunTarihi();
            row[4] = list.get(i).getUrunFiyati();
            
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_urunId = new javax.swing.JTextField();
        spn_urunAdedi = new javax.swing.JSpinner();
        btn_guncelle = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmb_gun = new javax.swing.JComboBox<>();
        cmb_ay = new javax.swing.JComboBox<>();
        cmb_yil = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txt_fiyat = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txt_aramaBul = new javax.swing.JTextField();
        btn_listeGuncelle = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Ürün ID");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Ürün Adedi");

        txt_urunId.setBackground(new java.awt.Color(102, 102, 102));
        txt_urunId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_urunIdKeyTyped(evt);
            }
        });

        spn_urunAdedi.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spn_urunAdedi.setMinimumSize(new java.awt.Dimension(60, 22));
        spn_urunAdedi.setPreferredSize(new java.awt.Dimension(60, 22));

        btn_guncelle.setBackground(new java.awt.Color(0, 0, 0));
        btn_guncelle.setForeground(new java.awt.Color(255, 255, 255));
        btn_guncelle.setIcon(new javax.swing.ImageIcon("C:\\Users\\ASUS\\Documents\\NetBeansProjects\\Stok_Takip\\src\\main\\java\\icon\\contract.png")); // NOI18N
        btn_guncelle.setText("Güncelle");
        btn_guncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guncelleActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tarih");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Gün");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Ay");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Yıl");

        cmb_gun.setBackground(new java.awt.Color(0, 0, 0));
        cmb_gun.setForeground(new java.awt.Color(255, 255, 255));
        cmb_gun.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        cmb_ay.setBackground(new java.awt.Color(0, 0, 0));
        cmb_ay.setForeground(new java.awt.Color(255, 255, 255));
        cmb_ay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        cmb_yil.setBackground(new java.awt.Color(0, 0, 0));
        cmb_yil.setForeground(new java.awt.Color(255, 255, 255));
        cmb_yil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2022", "2021", "2020", "2019", "2018", "2017", "2016", "2015" }));

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Ürün Fiyat");

        txt_fiyat.setBackground(new java.awt.Color(102, 102, 102));
        txt_fiyat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_fiyatKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(47, 47, 47)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(spn_urunAdedi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txt_fiyat, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_urunId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(cmb_gun, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmb_ay, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmb_yil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(btn_guncelle, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_urunId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txt_fiyat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(spn_urunAdedi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_gun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_ay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_yil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(btn_guncelle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 70;
        gridBagConstraints.ipady = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 136, 51, 147);
        jPanel3.add(jPanel4, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Ürün Güncelle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 244, 0, 0);
        jPanel3.add(jLabel1, gridBagConstraints);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 729, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Ürün Güncelleme", jPanel1);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ürün ID", "Ürün Adı", "Ürün Grubu", "Ürün Adeti", "Ürün Fiyatı (TL)", "Güncelleme Tarihi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));

        jLabel8.setIcon(new javax.swing.ImageIcon("C:\\Users\\ASUS\\Documents\\NetBeansProjects\\Stok_Takip\\src\\main\\java\\icon\\magnifying-glass.png")); // NOI18N

        txt_aramaBul.setBackground(new java.awt.Color(153, 153, 153));
        txt_aramaBul.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_aramaBulKeyTyped(evt);
            }
        });

        btn_listeGuncelle.setBackground(new java.awt.Color(153, 153, 153));
        btn_listeGuncelle.setIcon(new javax.swing.ImageIcon("C:\\Users\\ASUS\\Documents\\NetBeansProjects\\Stok_Takip\\src\\main\\java\\icon\\refresh.png")); // NOI18N
        btn_listeGuncelle.setText("Listeyi Güncelle");
        btn_listeGuncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_listeGuncelleActionPerformed(evt);
            }
        });

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Ürün ID");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(txt_aramaBul, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_listeGuncelle)
                .addContainerGap(253, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_listeGuncelle)
                        .addComponent(txt_aramaBul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel5, java.awt.BorderLayout.PAGE_START);

        jTabbedPane1.addTab("Ürünleri Göster", jPanel2);

        getContentPane().add(jTabbedPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_aramaBulKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_aramaBulKeyTyped
        //Kullanıcının Id kismina rakam harici başka bir şey yazmamasını sağlar
        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_aramaBulKeyTyped

    private void txt_urunIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_urunIdKeyTyped
        //Kullanıcının Id kismina rakam harici başka bir şey yazmamasını sağlar
        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_urunIdKeyTyped

    private void btn_guncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guncelleActionPerformed
        String id = "";
        int adet = 0;
        String tarih = "";
        String ad = "";
        String urunGrup = "";
        String fiyat="";

        //İlk başta textfield'ların dolu olup olmadığını kontrol ediyorum.
        if (txt_urunId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Lütfen ürün id'sini giriniz.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            id = txt_urunId.getText();
        }
        if (txt_fiyat.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Lütfen ürün fiyatını giriniz.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            fiyat = txt_fiyat.getText();
        }

        adet = (int) spn_urunAdedi.getValue();
        String adetTotal = adet + "";

        String yil = cmb_yil.getSelectedItem().toString();
        String gun = cmb_gun.getSelectedItem().toString();
        String ay = cmb_ay.getSelectedItem().toString();

        //Aşağıda yazmış olduğum metod ile tarihin kontorlünü sağlıyorum. Akış dılı tarih girildiğinde
        //aşağıdaki hata mesajı verilir.(Örneğin 29.02.2017 olmayacağını gösterir.) 
        if (!(tarihHesap(gun, ay, yil))) {
            JOptionPane.showMessageDialog(null, "Hatalı tarih girişi yaptınız.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        tarih = gun + "/" + ay + "/" + yil;

        try {
            connect = baglanti();
            state = connect.createStatement();
            result = state.executeQuery("SELECT * FROM app.urunler");

            //Kayıt yaparken bağlandığım database'in kaç satırdan oluştuğunu öğrenmek için bu kısmı yazdım.
            int rowCount = 0;
            while (result.next()) {
                if (result.getString("URUNID") != null) {
                    rowCount++;
                } else {
                    break;
                }
            }

            //Connection'u close'layıp listenin tekrardan başından alınmasını sağlamış oluyorum.
            connect.close();
            state.close();

            connect = baglanti();
            state = connect.createStatement();
            result = state.executeQuery("SELECT * FROM app.urunler");

            boolean isExist = false;
            //Veritabanındaki satır sayısı 0'dan büyük olduğu ve ürünün id'si başka bir ürünün id'si ile eşleşmediği
            //sürece ürünün veritabanındaki bilgisini günceller . Veritabanındaki satır sayısı 0'sa yani içi boş ise 
            //güncellenecek veri olmadığından henüz bir ürün girişi yapılmadığı uyarısı gelir. 
            //Ürün id'sinin aynı olması dahilinde ürünün zaten var olduğunu yönünde uyarı gelir.
            if (rowCount > 0) {
                while (result.next()) {
                    ad = result.getString("URUNAD");
                    urunGrup = result.getString("URUNGRUBU");

                    String urunId = result.getString("URUNID");
                    if (id.equals(urunId)) {
                        //Bu kısımdaki query veritabanımdaki ürünler tablosuna ürünün güncel halini eklemeyi sağlayacak.
                        String query = "update app.urunler set urunAdedi='" + adetTotal + "',urunTarih='" + tarih + "',urunFiyat='"+fiyat+"' where urunId='" + id + "' ";
                        state.executeUpdate(query);
                        isExist = true;

                        //Connection'u close'layıp listenin tekrardan başından alınmasını sağlamış oluyorum.
                        connect.close();
                        state.close();

                        connect = baglanti();
                        state = connect.createStatement();
                        //Buradaki query ise veriler kısmında güncellenen ürünlerin verisini tutmak istediğim için
                        //veritabanındaki güncellenen ürünler tablosuna gerekli veriyi ekler.
                        String query2 = "insert into app.guncellenenurunler values('" + id + "',"
                                + "'" + ad + "','" + urunGrup + "','" + adetTotal + "','" + tarih + "','"+fiyat+"')";
                        state.executeUpdate(query2);
                        connect.close();
                        JOptionPane.showMessageDialog(null, "Ürün başarıyla güncellendi.", "Warning", JOptionPane.WARNING_MESSAGE);
                        txt_aramaBul.setText("");
                        txt_urunId.setText("");
                        txt_fiyat.setText("");
                        spn_urunAdedi.setValue(0);
                        cmb_ay.setSelectedIndex(0);
                        cmb_gun.setSelectedIndex(0);
                        cmb_yil.setSelectedIndex(0);
                        return;
                    }
                }
                if (!isExist) {
                    JOptionPane.showMessageDialog(null, "Girilen id'ye uygun ürün bulunamadı.", "Warning", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            } else {
                JOptionPane.showMessageDialog(null, "Henüz bir ürün girişi yapılmadı.", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }

        } catch (SQLException ex) {
            Logger.getLogger(UrunGuncelle.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btn_guncelleActionPerformed

    private void btn_listeGuncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_listeGuncelleActionPerformed
        model.setRowCount(0);
        if (txt_aramaBul.getText().isEmpty()) {
            String query = "SELECT * FROM app.urunler";
            showTable(query);
        } else {
            String query2 = "SELECT * FROM app.urunler WHERE urunId LIKE '%" + txt_aramaBul.getText() + "%'";
            showTable(query2);
        }
    }//GEN-LAST:event_btn_listeGuncelleActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        txt_aramaBul.setText("");
        txt_urunId.setText("");
        txt_fiyat.setText("");
        spn_urunAdedi.setValue(0);
        cmb_ay.setSelectedIndex(0);
        cmb_gun.setSelectedIndex(0);
        cmb_yil.setSelectedIndex(0);
        this.dispose();

    }//GEN-LAST:event_formWindowClosing

    private void txt_fiyatKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_fiyatKeyTyped
        //Kullanıcının Id kismina rakam harici başka bir şey yazmamasını sağlar
        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_fiyatKeyTyped

    public static UrunGuncelle getObj() {
        //Main kısmında belirttiğim bir panelin birden fazla açılmasını engellemek
        //amaçlı yazdığım metot.
        if (obj == null) {
            obj = new UrunGuncelle();
        }
        return obj;

    }

    //Yukarıda belirttiğim gibi kullanıcının girmiş olduğu tarih bilgisinin
    //doğruluğunu kontrol edip ona göre boolean true veya false dönen metoddur.
    public boolean tarihHesap(String gun, String ay, String yil) {
        boolean dogruTarih = true;
        int yil2 = Integer.parseInt(yil);
        int gun2 = Integer.parseInt(gun);

        switch (ay) {
            case "02":
                if (((yil2 % 4 == 0) && !(yil2 % 100 == 0)) || (yil2 % 400 == 0)) {
                    if (gun2 == 30 || gun2 == 31) {
                        dogruTarih = false;
                    } else {
                        dogruTarih = true;
                    }

                } else {
                    if (gun2 == 29 || gun2 == 30 || gun2 == 31) {
                        dogruTarih = false;
                    } else {
                        dogruTarih = true;
                    }

                }
                break;

            case "04":
                if (gun2 == 31) {
                    dogruTarih = false;
                } else {
                    dogruTarih = true;
                }
                break;

            case "06":
                if (gun2 == 31) {
                    dogruTarih = false;
                } else {
                    dogruTarih = true;
                }
                break;
            case "09":
                if (gun2 == 31) {
                    dogruTarih = false;
                } else {
                    dogruTarih = true;
                }
                break;

            case "11":
                if (gun2 == 31) {
                    dogruTarih = false;
                } else {
                    dogruTarih = true;
                }
                break;

        }
        return dogruTarih;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UrunGuncelle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UrunGuncelle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UrunGuncelle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UrunGuncelle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UrunGuncelle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_guncelle;
    private javax.swing.JButton btn_listeGuncelle;
    private javax.swing.JComboBox<String> cmb_ay;
    private javax.swing.JComboBox<String> cmb_gun;
    private javax.swing.JComboBox<String> cmb_yil;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JSpinner spn_urunAdedi;
    private javax.swing.JTextField txt_aramaBul;
    private javax.swing.JTextField txt_fiyat;
    private javax.swing.JTextField txt_urunId;
    // End of variables declaration//GEN-END:variables
}
